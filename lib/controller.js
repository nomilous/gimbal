// Generated by CoffeeScript 1.6.3
var controller;

module.exports = controller = function(opts, callback) {
  return callback(null, {
    headers: {
      'Content-Type': 'text/javascript'
    },
    body: "(" + (module.exports.client.toString()) + ").call(self);"
  });
};

controller.$www = {};

module.exports.client = function() {
  var THREE, animate, aspect, camera, container, dom, far, fov, height, near, pointLight, radius, renderer, rings, scene, segments, sphere1, sphere2, sphereGeometry, sphereMaterial, width, x;
  dom = require('component~dom@1.0.5');
  THREE = require('cvdlab~three@0.60.0');
  container = dom('body').append('<div></div>');
  width = 400;
  height = 300;
  fov = 45;
  aspect = width / height;
  near = 0.1;
  far = 1000;
  renderer = new THREE.WebGLRenderer;
  camera = new THREE.PerspectiveCamera(fov, aspect, near, far);
  scene = new THREE.Scene;
  scene.add(camera);
  camera.position.z = 300;
  renderer.setSize(width, height);
  renderer.setClearColor(0x222222, 1);
  container.append(renderer.domElement);
  radius = 5;
  segments = 16;
  rings = 16;
  sphereGeometry = new THREE.SphereGeometry(radius, segments, rings);
  sphereMaterial = new THREE.MeshLambertMaterial({
    color: 0xFFFFFF
  });
  sphere1 = new THREE.Mesh(sphereGeometry, sphereMaterial);
  sphere2 = new THREE.Mesh(sphereGeometry, sphereMaterial);
  scene.add(sphere1);
  scene.add(sphere2);
  pointLight = new THREE.PointLight(0xFFFFFF);
  pointLight.position.x = 10;
  pointLight.position.y = 50;
  pointLight.position.z = 130;
  scene.add(pointLight);
  x = 0;
  animate = function() {
    try {
      requestAnimationFrame(animate);
      sphere1.position.x = 100;
      sphere2.position.x = -100;
      return renderer.render(scene, camera);
    } catch (_error) {}
  };
  return animate();
};
