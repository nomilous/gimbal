// Generated by CoffeeScript 1.6.3
var define;

if (typeof define !== 'function') {
  define = require('amdefine')(module);
}

define(function() {
  var Existance;
  return Existance = (function() {
    function Existance(_arg) {
      var tools;
      this.THREE = _arg.THREE, tools = _arg.tools;
      this.name = 'existance';
      this.AsJustInTime = tools.AsJustInTime, this.AsDeltaState = tools.AsDeltaState;
    }

    Existance.prototype.registerActor = function(token, actor) {
      var _this = this;
      actor.exists = true;
      actor.mass || (actor.mass = 1.0);
      actor.position || (actor.position = new this.THREE.Vector3(0, 0, 0));
      if (!((token.pair != null) && (token.pair.range_vector != null))) {
        this.AsJustInTime.call(token, 'range_vector', function(token, a, b, previous) {
          if (previous == null) {
            previous = a.position.clone();
          }
          previous.copy(a.position).sub(b.position);
          return previous;
        });
      }
      if (token.pair.range_scalar == null) {
        return this.AsJustInTime.call(token, 'range_scalar', function(token, a, b, previous) {
          var distance, range_vector;
          if (!previous) {
            previous = {};
            _this.AsDeltaState.call(previous, 'range');
          }
          range_vector = token.pair.range_vector(token, token.cycle, a, b);
          distance = Math.sqrt(range_vector.dot(range_vector));
          previous.range.set(distance);
          return previous;
        });
      }
    };

    Existance.prototype.preSet = function(token, actor) {
      if (!actor.exists) {

      }
    };

    return Existance;

  })();
});
