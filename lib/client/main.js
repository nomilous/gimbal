// Generated by CoffeeScript 1.6.3
require(['three', '/js/tools/tools.js', '/js/actors/actors.js', '/js/realm/engines/classical/classical_mechanics.js', '/js/realm/engines/classical/behaviours/behaviours.js', 'realm/ui/user_interface', 'realm/visualizer/web_g_l_visualizer', '/js/realm/realm.js'], function(three, tools, actors, ClassicalMechanics, behaviours, UserInterface, WebGLVisualizer, Realm) {
  var BoundarySphere, Collision, Existance, Gravitation, Motion, SphericalMass, engine, exist, globals, realm, ui, visualizer;
  globals = {
    document: document,
    window: window,
    THREE: THREE,
    tools: tools
  };
  ui = new UserInterface(globals);
  engine = new ClassicalMechanics(globals, ui, {
    time: 1,
    paused: false
  });
  Existance = behaviours.Existance, Motion = behaviours.Motion, Gravitation = behaviours.Gravitation, Collision = behaviours.Collision;
  engine.registerBehaviour(new Existance(globals, ui));
  engine.registerBehaviour(new Motion(globals, ui));
  engine.registerBehaviour(new Gravitation(globals, ui, {
    G: 0.005
  }));
  engine.registerBehaviour(new Collision(globals, ui));
  visualizer = new WebGLVisualizer(globals, ui, {
    clearColor: 0x222222,
    clearAlpha: 1,
    fov: 70
  });
  realm = new Realm(globals, ui, {
    engine: engine,
    visualizer: visualizer
  });
  BoundarySphere = actors.BoundarySphere, SphericalMass = actors.SphericalMass;
  realm.registerActor(new SphericalMass(globals, ui, {
    gravitation: true,
    mass: 10000,
    segments: 100,
    rings: 100,
    position: new THREE.Vector3(0.0, 0.0, -150.0),
    velocity: new THREE.Vector3(0.0, 0.0, -0.02),
    light: {
      color: 0xFFFFFF
    }
  }));
  realm.registerActor(new SphericalMass(globals, ui, {
    gravitation: true,
    mass: 200,
    segments: 20,
    rings: 20,
    position: new THREE.Vector3(45.0, 0.0, -150.0),
    velocity: new THREE.Vector3(0.0, 0.0, 1.0)
  }));
  exist = function() {
    requestAnimationFrame(exist);
    return realm.exist();
  };
  return exist();
});
