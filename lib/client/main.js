// Generated by CoffeeScript 1.6.3
require(['/js/three.min.js', '/js/angular.min.js', '/client/tools/tools.js', '/client/actors/actors.js', '/client/realm/engines/classical/classical_mechanics.js', '/client/realm/engines/classical/behaviours/behaviours.js', '/client/realm/ui/user_interface.js', '/client/realm/visualizer/web_g_l_visualizer.js', '/client/realm/realm.js'], function(three, ng, tools, actors, ClassicalMechanics, behaviours, UserInterface, WebGLVisualizer, Realm) {
  var BoundarySphere, Collision, Existance, Gravitation, Motion, SphericalMass, app, engine, exist, globals, realm, ui, visualizer;
  app = angular.module('gimbal', []);
  globals = {
    app: app,
    document: document,
    window: window,
    THREE: THREE,
    tools: tools
  };
  ui = new UserInterface(globals);
  engine = new ClassicalMechanics(globals, ui, {
    time: 1,
    paused: false
  });
  Existance = behaviours.Existance, Motion = behaviours.Motion, Gravitation = behaviours.Gravitation, Collision = behaviours.Collision;
  engine.registerBehaviour(new Existance(globals, ui));
  engine.registerBehaviour(new Motion(globals, ui));
  engine.registerBehaviour(new Gravitation(globals, ui, {
    G: 0.005
  }));
  engine.registerBehaviour(new Collision(globals, ui));
  visualizer = new WebGLVisualizer(globals, ui, {
    clearColor: 0x222222,
    clearAlpha: 1,
    fov: 70
  });
  globals.realm = realm = new Realm(globals, ui, {
    engine: engine,
    visualizer: visualizer
  });
  BoundarySphere = actors.BoundarySphere, SphericalMass = actors.SphericalMass;
  globals.init = function() {
    realm.registerActor(new BoundarySphere(globals, ui, {
      radius: 100,
      mass: 8000000000000,
      collision: {},
      segments: 100,
      rings: 100,
      position: new THREE.Vector3(0.0, 0.0, -200.0)
    }));
    realm.registerActor(new SphericalMass(globals, ui, {
      gravitation: true,
      collision: {},
      mass: 8000,
      radius: 25,
      segments: 100,
      rings: 100,
      position: new THREE.Vector3(-45.0, 0.0, -200.0),
      velocity: new THREE.Vector3(0.0, 0.0, -0.1)
    }));
    realm.registerActor(new SphericalMass(globals, ui, {
      gravitation: true,
      collision: {},
      mass: 800,
      radius: 5,
      segments: 100,
      rings: 100,
      position: new THREE.Vector3(45.0, 20.0, -200.0),
      velocity: new THREE.Vector3(0.0, 0.4, 0.2),
      light: {
        color: 0xFFFFFF
      }
    }));
    return realm.registerActor(new SphericalMass(globals, ui, {
      gravitation: true,
      collision: {},
      mass: 800,
      radius: 5,
      segments: 100,
      rings: 100,
      position: new THREE.Vector3(45.0, -20.0, -200.0),
      velocity: new THREE.Vector3(0.0, 0.0, 0.5),
      light: {
        color: 0xFFFFFF
      }
    }));
  };
  globals.init();
  exist = function() {
    requestAnimationFrame(exist);
    return realm.exist();
  };
  exist();
  return angular.element(document).ready(function() {
    return angular.bootstrap(document, ["gimbal"]);
  });
});
