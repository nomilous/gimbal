// Generated by CoffeeScript 1.6.3
var define,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

if (typeof define !== 'function') {
  define = require('amdefine')(module);
}

define(['../hud/hud_visible.js'], function(HudVisible) {
  var BoundarySphere;
  return BoundarySphere = (function(_super) {
    __extends(BoundarySphere, _super);

    function BoundarySphere(globals, ui, config) {
      var _base, _base1;
      this.ui = ui;
      BoundarySphere.__super__.constructor.call(this, globals, this.ui, config);
      this.boundarysphere = true;
      this.THREE = globals.THREE;
      this.radius || (this.radius = 500);
      this.segments || (this.segments = 30);
      this.rings || (this.rings = 30);
      this.material || (this.material = {});
      (_base = this.material).wireframe || (_base.wireframe = true);
      (_base1 = this.material).wireframeLinewidth || (_base1.wireframeLinewidth = 1);
      this.position || (this.position = new this.THREE.Vector3(0.0, 0.0, 0.0));
    }

    BoundarySphere.prototype.onVisRegister = function(visualizer) {
      var Mesh, MeshNormalMaterial, SphereGeometry, geometry, material, _ref;
      _ref = this.THREE, Mesh = _ref.Mesh, SphereGeometry = _ref.SphereGeometry, MeshNormalMaterial = _ref.MeshNormalMaterial;
      geometry = new SphereGeometry(this.radius, this.segments, this.rings);
      material = new MeshNormalMaterial(this.material);
      this.GLobject = new Mesh(geometry, material);
      visualizer.scene.add(this.GLobject);
      return this.GLobject.position = this.position;
    };

    return BoundarySphere;

  })(HudVisible);
});
