// Generated by CoffeeScript 1.6.3
var define,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

if (typeof define !== 'function') {
  define = require('amdefine')(module);
}

define(['../realm/actor.js'], function(Actor) {
  var BoundarySphere;
  return BoundarySphere = (function(_super) {
    __extends(BoundarySphere, _super);

    function BoundarySphere(globals, ui, config) {
      this.ui = ui;
      this.THREE = globals.THREE;
      this.boundarysphere = true;
      this.radius = config.radius || 500;
      this.segments = config.segments || 30;
      this.rings = config.rings || 30;
      this.material = {
        wireframe: true,
        wireframeLinewidth: 1,
        opacity: 0.15
      };
    }

    BoundarySphere.prototype.onVisRegister = function(visualizer) {
      this.GLobject = new this.THREE.Mesh(new this.THREE.SphereGeometry(this.radius, this.segments, this.rings), new this.THREE.MeshNormalMaterial(this.material));
      return visualizer.scene.add(this.GLobject);
    };

    return BoundarySphere;

  })(Actor);
});
